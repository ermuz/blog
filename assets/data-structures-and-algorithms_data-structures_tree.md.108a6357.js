import{_ as t,c as r,o as e,d as s}from"./app.a19d119d.js";const u=JSON.parse('{"title":"树","description":"","frontmatter":{},"headers":[{"level":2,"title":"概念","slug":"概念","link":"#概念","children":[]}],"relativePath":"data-structures-and-algorithms/data-structures/tree.md","lastUpdated":1668835952000}'),a={name:"data-structures-and-algorithms/data-structures/tree.md"},n=s('<h1 id="树" tabindex="-1">树 <a class="header-anchor" href="#树" aria-hidden="true">#</a></h1><p>是n（n&gt;=0)个节点的有限集。n=0时称为空树。在任意一颗非空树中：</p><ol><li>有且仅有一个特定的称为根（Root）的节点；</li><li>当n&gt;1时，其余节点可分为m(m&gt;0)个互不相交的有限集T1、T2、......、Tn，其中每一个集合本身又是一棵树，并且称为根的子树。</li></ol><p>此外，树的定义还需要强调以下两点：</p><ol><li>n&gt;0 时根节点是唯一的，不可能存在多个根节点，数据结构中的树只能有一个根节点。</li><li>m&gt;0 时，子树的个数没有限制，但它们一定是互不相交的。</li></ol><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-hidden="true">#</a></h2><ol><li><strong>节点</strong> 是数据结构中的基础，是构成复杂数据结构的基本组成单位。</li><li><strong>度</strong> 节点拥有的子树数目称为节点的度</li><li><strong>关系</strong> 节点子树的根节点为该节点的<strong>孩子节点</strong>。相应该节点称为孩子节点的<strong>双亲节点</strong>。 同一个双亲节点的孩子节点之间互称<strong>兄弟节点</strong>。</li><li><strong>层次</strong> 从根开始定义起，根为第0层，根的孩子为第1层，以此类推。</li><li><strong>深度</strong> 树中节点的最大层次数称为树的深度或高度</li><li><strong>平衡因子</strong> 此节点往下 左子树深度 - 右子树深度=平衡因子</li></ol>',7),o=[n];function i(l,d,c,g,_,h){return e(),r("div",null,o)}const m=t(a,[["render",i]]);export{u as __pageData,m as default};
